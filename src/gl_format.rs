// Copyright (c) 2021 Kyrylo Bazhenov
//
// This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
// If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/.

#![allow(dead_code, non_upper_case_globals)]

pub const GL_R8: u32 = 0x8229;
pub const GL_RG8: u32 = 0x822B;
pub const GL_RGB8: u32 = 0x8051;
pub const GL_RGBA8: u32 = 0x8058;
pub const GL_R8_SNORM: u32 = 0x8F94;
pub const GL_RG8_SNORM: u32 = 0x8F95;
pub const GL_RGB8_SNORM: u32 = 0x8F96;
pub const GL_RGBA8_SNORM: u32 = 0x8F97;
pub const GL_R8UI: u32 = 0x8232;
pub const GL_RG8UI: u32 = 0x8238;
pub const GL_RGB8UI: u32 = 0x8D7D;
pub const GL_RGBA8UI: u32 = 0x8D7C;
pub const GL_R8I: u32 = 0x8231;
pub const GL_RG8I: u32 = 0x8237;
pub const GL_RGB8I: u32 = 0x8D8F;
pub const GL_RGBA8I: u32 = 0x8D8E;
pub const GL_SR8: u32 = 0x8FBD;
pub const GL_SRG8: u32 = 0x8FBE;
pub const GL_SRGB8: u32 = 0x8C41;
pub const GL_SRGB8_ALPHA8: u32 = 0x8C43;
pub const GL_R16: u32 = 0x822A;
pub const GL_RG16: u32 = 0x822C;
pub const GL_RGB16: u32 = 0x8054;
pub const GL_RGBA16: u32 = 0x805B;
pub const GL_R16_SNORM: u32 = 0x8F98;
pub const GL_RG16_SNORM: u32 = 0x8F99;
pub const GL_RGB16_SNORM: u32 = 0x8F9A;
pub const GL_RGBA16_SNORM: u32 = 0x8F9B;
pub const GL_R16UI: u32 = 0x8234;
pub const GL_RG16UI: u32 = 0x823A;
pub const GL_RGB16UI: u32 = 0x8D77;
pub const GL_RGBA16UI: u32 = 0x8D76;
pub const GL_R16I: u32 = 0x8233;
pub const GL_RG16I: u32 = 0x8239;
pub const GL_RGB16I: u32 = 0x8D89;
pub const GL_RGBA16I: u32 = 0x8D88;
pub const GL_R16F: u32 = 0x822D;
pub const GL_RG16F: u32 = 0x822F;
pub const GL_RGB16F: u32 = 0x881B;
pub const GL_RGBA16F: u32 = 0x881A;
pub const GL_R32UI: u32 = 0x8236;
pub const GL_RG32UI: u32 = 0x823C;
pub const GL_RGB32UI: u32 = 0x8D71;
pub const GL_RGBA32UI: u32 = 0x8D70;
pub const GL_R32I: u32 = 0x8235;
pub const GL_RG32I: u32 = 0x823B;
pub const GL_RGB32I: u32 = 0x8D83;
pub const GL_RGBA32I: u32 = 0x8D82;
pub const GL_R32F: u32 = 0x822E;
pub const GL_RG32F: u32 = 0x8230;
pub const GL_RGB32F: u32 = 0x8815;
pub const GL_RGBA32F: u32 = 0x8814;
pub const GL_R3_G3_B2: u32 = 0x2A10;
pub const GL_RGB4: u32 = 0x804F;
pub const GL_RGB5: u32 = 0x8050;
pub const GL_RGB565: u32 = 0x8D62;
pub const GL_RGB10: u32 = 0x8052;
pub const GL_RGB12: u32 = 0x8053;
pub const GL_RGBA2: u32 = 0x8055;
pub const GL_RGBA4: u32 = 0x8056;
pub const GL_RGBA12: u32 = 0x805A;
pub const GL_RGB5_A1: u32 = 0x8057;
pub const GL_RGB10_A2: u32 = 0x8059;
pub const GL_RGB10_A2UI: u32 = 0x906F;
pub const GL_R11F_G11F_B10F: u32 = 0x8C3A;
pub const GL_RGB9_E5: u32 = 0x8C3D;
pub const GL_ALPHA4: u32 = 0x803B;
pub const GL_ALPHA8: u32 = 0x803C;
pub const GL_ALPHA8_SNORM: u32 = 0x9014;
pub const GL_ALPHA8UI_EXT: u32 = 0x8D7E;
pub const GL_ALPHA8I_EXT: u32 = 0x8D90;
pub const GL_ALPHA12: u32 = 0x803D;
pub const GL_ALPHA16: u32 = 0x803E;
pub const GL_ALPHA16_SNORM: u32 = 0x9018;
pub const GL_ALPHA16UI_EXT: u32 = 0x8D78;
pub const GL_ALPHA16I_EXT: u32 = 0x8D8A;
pub const GL_ALPHA16F_ARB: u32 = 0x881C;
pub const GL_ALPHA32UI_EXT: u32 = 0x8D72;
pub const GL_ALPHA32I_EXT: u32 = 0x8D84;
pub const GL_ALPHA32F_ARB: u32 = 0x8816;
pub const GL_LUMINANCE4: u32 = 0x803F;
pub const GL_LUMINANCE8: u32 = 0x8040;
pub const GL_LUMINANCE8_SNORM: u32 = 0x9015;
pub const GL_SLUMINANCE8: u32 = 0x8C47;
pub const GL_LUMINANCE8UI_EXT: u32 = 0x8D80;
pub const GL_LUMINANCE8I_EXT: u32 = 0x8D92;
pub const GL_LUMINANCE12: u32 = 0x8041;
pub const GL_LUMINANCE16: u32 = 0x8042;
pub const GL_LUMINANCE16_SNORM: u32 = 0x9019;
pub const GL_LUMINANCE16UI_EXT: u32 = 0x8D7A;
pub const GL_LUMINANCE16I_EXT: u32 = 0x8D8C;
pub const GL_LUMINANCE16F_ARB: u32 = 0x881E;
pub const GL_LUMINANCE32UI_EXT: u32 = 0x8D74;
pub const GL_LUMINANCE32I_EXT: u32 = 0x8D86;
pub const GL_LUMINANCE32F_ARB: u32 = 0x8818;
pub const GL_LUMINANCE4_ALPHA4: u32 = 0x8043;
pub const GL_LUMINANCE6_ALPHA2: u32 = 0x8044;
pub const GL_LUMINANCE8_ALPHA8: u32 = 0x8045;
pub const GL_LUMINANCE8_ALPHA8_SNORM: u32 = 0x9016;
pub const GL_SLUMINANCE8_ALPHA8: u32 = 0x8C45;
pub const GL_LUMINANCE_ALPHA8UI_EXT: u32 = 0x8D81;
pub const GL_LUMINANCE_ALPHA8I_EXT: u32 = 0x8D93;
pub const GL_LUMINANCE12_ALPHA4: u32 = 0x8046;
pub const GL_LUMINANCE12_ALPHA12: u32 = 0x8047;
pub const GL_LUMINANCE16_ALPHA16: u32 = 0x8048;
pub const GL_LUMINANCE16_ALPHA16_SNORM: u32 = 0x901A;
pub const GL_LUMINANCE_ALPHA16UI_EXT: u32 = 0x8D7B;
pub const GL_LUMINANCE_ALPHA16I_EXT: u32 = 0x8D8D;
pub const GL_LUMINANCE_ALPHA16F_ARB: u32 = 0x881F;
pub const GL_LUMINANCE_ALPHA32UI_EXT: u32 = 0x8D75;
pub const GL_LUMINANCE_ALPHA32I_EXT: u32 = 0x8D87;
pub const GL_LUMINANCE_ALPHA32F_ARB: u32 = 0x8819;
pub const GL_INTENSITY4: u32 = 0x804A;
pub const GL_INTENSITY8: u32 = 0x804B;
pub const GL_INTENSITY8_SNORM: u32 = 0x9017;
pub const GL_INTENSITY8UI_EXT: u32 = 0x8D7F;
pub const GL_INTENSITY8I_EXT: u32 = 0x8D91;
pub const GL_INTENSITY12: u32 = 0x804C;
pub const GL_INTENSITY16: u32 = 0x804D;
pub const GL_INTENSITY16_SNORM: u32 = 0x901B;
pub const GL_INTENSITY16UI_EXT: u32 = 0x8D79;
pub const GL_INTENSITY16I_EXT: u32 = 0x8D8B;
pub const GL_INTENSITY16F_ARB: u32 = 0x881D;
pub const GL_INTENSITY32UI_EXT: u32 = 0x8D73;
pub const GL_INTENSITY32I_EXT: u32 = 0x8D85;
pub const GL_INTENSITY32F_ARB: u32 = 0x8817;
pub const GL_COMPRESSED_RED: u32 = 0x8225;
pub const GL_COMPRESSED_ALPHA: u32 = 0x84E9;
pub const GL_COMPRESSED_LUMINANCE: u32 = 0x84EA;
pub const GL_COMPRESSED_SLUMINANCE: u32 = 0x8C4A;
pub const GL_COMPRESSED_LUMINANCE_ALPHA: u32 = 0x84EB;
pub const GL_COMPRESSED_SLUMINANCE_ALPHA: u32 = 0x8C4B;
pub const GL_COMPRESSED_INTENSITY: u32 = 0x84EC;
pub const GL_COMPRESSED_RG: u32 = 0x8226;
pub const GL_COMPRESSED_RGB: u32 = 0x84ED;
pub const GL_COMPRESSED_RGBA: u32 = 0x84EE;
pub const GL_COMPRESSED_SRGB: u32 = 0x8C48;
pub const GL_COMPRESSED_SRGB_ALPHA: u32 = 0x8C49;
pub const GL_COMPRESSED_RGB_FXT1_3DFX: u32 = 0x86B0;
pub const GL_COMPRESSED_RGBA_FXT1_3DFX: u32 = 0x86B1;
pub const GL_COMPRESSED_RGB_S3TC_DXT1_EXT: u32 = 0x83F0;
pub const GL_COMPRESSED_RGBA_S3TC_DXT1_EXT: u32 = 0x83F1;
pub const GL_COMPRESSED_RGBA_S3TC_DXT3_EXT: u32 = 0x83F2;
pub const GL_COMPRESSED_RGBA_S3TC_DXT5_EXT: u32 = 0x83F3;
pub const GL_COMPRESSED_SRGB_S3TC_DXT1_EXT: u32 = 0x8C4C;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: u32 = 0x8C4D;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: u32 = 0x8C4E;
pub const GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: u32 = 0x8C4F;
pub const GL_COMPRESSED_LUMINANCE_LATC1_EXT: u32 = 0x8C70;
pub const GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT: u32 = 0x8C72;
pub const GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT: u32 = 0x8C71;
pub const GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT: u32 = 0x8C73;
pub const GL_COMPRESSED_RED_RGTC1: u32 = 0x8DBB;
pub const GL_COMPRESSED_RG_RGTC2: u32 = 0x8DBD;
pub const GL_COMPRESSED_SIGNED_RED_RGTC1: u32 = 0x8DBC;
pub const GL_COMPRESSED_SIGNED_RG_RGTC2: u32 = 0x8DBE;
pub const GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT: u32 = 0x8E8E;
pub const GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT: u32 = 0x8E8F;
pub const GL_COMPRESSED_RGBA_BPTC_UNORM: u32 = 0x8E8C;
pub const GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM: u32 = 0x8E8D;
pub const GL_ETC1_RGB8_OES: u32 = 0x8D64;
pub const GL_COMPRESSED_RGB8_ETC2: u32 = 0x9274;
pub const GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: u32 = 0x9276;
pub const GL_COMPRESSED_RGBA8_ETC2_EAC: u32 = 0x9278;
pub const GL_COMPRESSED_SRGB8_ETC2: u32 = 0x9275;
pub const GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: u32 = 0x9277;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: u32 = 0x9279;
pub const GL_COMPRESSED_R11_EAC: u32 = 0x9270;
pub const GL_COMPRESSED_RG11_EAC: u32 = 0x9272;
pub const GL_COMPRESSED_SIGNED_R11_EAC: u32 = 0x9271;
pub const GL_COMPRESSED_SIGNED_RG11_EAC: u32 = 0x9273;
pub const GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG: u32 = 0x8C01;
pub const GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG: u32 = 0x8C00;
pub const GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG: u32 = 0x8C03;
pub const GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG: u32 = 0x8C02;
pub const GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG: u32 = 0x9137;
pub const GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG: u32 = 0x9138;
pub const GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT: u32 = 0x8A54;
pub const GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT: u32 = 0x8A55;
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT: u32 = 0x8A56;
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT: u32 = 0x8A57;
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG: u32 = 0x93F0;
pub const GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG: u32 = 0x93F1;
pub const GL_COMPRESSED_RGBA_ASTC_4x4_KHR: u32 = 0x93B0;
pub const GL_COMPRESSED_RGBA_ASTC_5x4_KHR: u32 = 0x93B1;
pub const GL_COMPRESSED_RGBA_ASTC_5x5_KHR: u32 = 0x93B2;
pub const GL_COMPRESSED_RGBA_ASTC_6x5_KHR: u32 = 0x93B3;
pub const GL_COMPRESSED_RGBA_ASTC_6x6_KHR: u32 = 0x93B4;
pub const GL_COMPRESSED_RGBA_ASTC_8x5_KHR: u32 = 0x93B5;
pub const GL_COMPRESSED_RGBA_ASTC_8x6_KHR: u32 = 0x93B6;
pub const GL_COMPRESSED_RGBA_ASTC_8x8_KHR: u32 = 0x93B7;
pub const GL_COMPRESSED_RGBA_ASTC_10x5_KHR: u32 = 0x93B8;
pub const GL_COMPRESSED_RGBA_ASTC_10x6_KHR: u32 = 0x93B9;
pub const GL_COMPRESSED_RGBA_ASTC_10x8_KHR: u32 = 0x93BA;
pub const GL_COMPRESSED_RGBA_ASTC_10x10_KHR: u32 = 0x93BB;
pub const GL_COMPRESSED_RGBA_ASTC_12x10_KHR: u32 = 0x93BC;
pub const GL_COMPRESSED_RGBA_ASTC_12x12_KHR: u32 = 0x93BD;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: u32 = 0x93D0;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: u32 = 0x93D1;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: u32 = 0x93D2;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: u32 = 0x93D3;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: u32 = 0x93D4;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: u32 = 0x93D5;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: u32 = 0x93D6;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: u32 = 0x93D7;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: u32 = 0x93D8;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: u32 = 0x93D9;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: u32 = 0x93DA;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: u32 = 0x93DB;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: u32 = 0x93DC;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: u32 = 0x93DD;
pub const GL_COMPRESSED_RGBA_ASTC_3x3x3_OES: u32 = 0x93C0;
pub const GL_COMPRESSED_RGBA_ASTC_4x3x3_OES: u32 = 0x93C1;
pub const GL_COMPRESSED_RGBA_ASTC_4x4x3_OES: u32 = 0x93C2;
pub const GL_COMPRESSED_RGBA_ASTC_4x4x4_OES: u32 = 0x93C3;
pub const GL_COMPRESSED_RGBA_ASTC_5x4x4_OES: u32 = 0x93C4;
pub const GL_COMPRESSED_RGBA_ASTC_5x5x4_OES: u32 = 0x93C5;
pub const GL_COMPRESSED_RGBA_ASTC_5x5x5_OES: u32 = 0x93C6;
pub const GL_COMPRESSED_RGBA_ASTC_6x5x5_OES: u32 = 0x93C7;
pub const GL_COMPRESSED_RGBA_ASTC_6x6x5_OES: u32 = 0x93C8;
pub const GL_COMPRESSED_RGBA_ASTC_6x6x6_OES: u32 = 0x93C9;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES: u32 = 0x93E0;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES: u32 = 0x93E1;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES: u32 = 0x93E2;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES: u32 = 0x93E3;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES: u32 = 0x93E4;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES: u32 = 0x93E5;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES: u32 = 0x93E6;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES: u32 = 0x93E7;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES: u32 = 0x93E8;
pub const GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES: u32 = 0x93E9;
pub const GL_ATC_RGB_AMD: u32 = 0x8C92;
pub const GL_ATC_RGBA_EXPLICIT_ALPHA_AMD: u32 = 0x8C93;
pub const GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD: u32 = 0x87EE;
pub const GL_PALETTE4_RGB8_OES: u32 = 0x8B90;
pub const GL_PALETTE4_RGBA8_OES: u32 = 0x8B91;
pub const GL_PALETTE4_R5_G6_B5_OES: u32 = 0x8B92;
pub const GL_PALETTE4_RGBA4_OES: u32 = 0x8B93;
pub const GL_PALETTE4_RGB5_A1_OES: u32 = 0x8B94;
pub const GL_PALETTE8_RGB8_OES: u32 = 0x8B95;
pub const GL_PALETTE8_RGBA8_OES: u32 = 0x8B96;
pub const GL_PALETTE8_R5_G6_B5_OES: u32 = 0x8B97;
pub const GL_PALETTE8_RGBA4_OES: u32 = 0x8B98;
pub const GL_PALETTE8_RGB5_A1_OES: u32 = 0x8B99;
pub const GL_COLOR_INDEX1_EXT: u32 = 0x80E2;
pub const GL_COLOR_INDEX2_EXT: u32 = 0x80E3;
pub const GL_COLOR_INDEX4_EXT: u32 = 0x80E4;
pub const GL_COLOR_INDEX8_EXT: u32 = 0x80E5;
pub const GL_COLOR_INDEX12_EXT: u32 = 0x80E6;
pub const GL_COLOR_INDEX16_EXT: u32 = 0x80E7;
pub const GL_DEPTH_COMPONENT16: u32 = 0x81A5;
pub const GL_DEPTH_COMPONENT24: u32 = 0x81A6;
pub const GL_DEPTH_COMPONENT32: u32 = 0x81A7;
pub const GL_DEPTH_COMPONENT32F: u32 = 0x8CAC;
pub const GL_DEPTH_COMPONENT32F_NV: u32 = 0x8DAB;
pub const GL_STENCIL_INDEX1: u32 = 0x8D46;
pub const GL_STENCIL_INDEX4: u32 = 0x8D47;
pub const GL_STENCIL_INDEX8: u32 = 0x8D48;
pub const GL_STENCIL_INDEX16: u32 = 0x8D49;
pub const GL_DEPTH24_STENCIL8: u32 = 0x88F0;
pub const GL_DEPTH32F_STENCIL8: u32 = 0x8CAD;
pub const GL_DEPTH32F_STENCIL8_NV: u32 = 0x8DAC;

pub fn dxgi_to_gl(dxgi_format: u32) -> u32 {
    use crate::dds::dxgi_format::*;

    match dxgi_format {
        DXGI_FORMAT_UNKNOWN => panic!("Cannot translate FORMAT_UNKNOWN"),
        DXGI_FORMAT_R32G32B32A32_FLOAT => GL_RGBA32F,
        DXGI_FORMAT_R32G32B32A32_UINT => GL_RGBA32UI,
        DXGI_FORMAT_R32G32B32A32_SINT => GL_RGBA32I,
        DXGI_FORMAT_R32G32B32_FLOAT => GL_RGB32F,
        DXGI_FORMAT_R32G32B32_UINT => GL_RGB32UI,
        DXGI_FORMAT_R32G32B32_SINT => GL_RGB32I,
        DXGI_FORMAT_R16G16B16A16_FLOAT => GL_RGBA16F,
        DXGI_FORMAT_R16G16B16A16_UNORM => GL_RGBA16,
        DXGI_FORMAT_R16G16B16A16_UINT => GL_RGBA16UI,
        DXGI_FORMAT_R16G16B16A16_SNORM => GL_RGBA16_SNORM,
        DXGI_FORMAT_R16G16B16A16_SINT => GL_RGBA16I,
        DXGI_FORMAT_R32G32_FLOAT => GL_RG32F,
        DXGI_FORMAT_R32G32_UINT => GL_RG32UI,
        DXGI_FORMAT_R32G32_SINT => GL_RG32I,
        DXGI_FORMAT_D32_FLOAT_S8X24_UINT => GL_DEPTH32F_STENCIL8,
        DXGI_FORMAT_R10G10B10A2_UNORM => GL_RGB10_A2,
        DXGI_FORMAT_R10G10B10A2_UINT => GL_RGB10_A2UI,
        DXGI_FORMAT_R11G11B10_FLOAT => GL_R11F_G11F_B10F,
        DXGI_FORMAT_R8G8B8A8_UNORM => GL_RGBA8,
        DXGI_FORMAT_R8G8B8A8_UNORM_SRGB => GL_SRGB8_ALPHA8,
        DXGI_FORMAT_R8G8B8A8_UINT => GL_RGBA8UI,
        DXGI_FORMAT_R8G8B8A8_SNORM => GL_RGBA8_SNORM,
        DXGI_FORMAT_R8G8B8A8_SINT => GL_RGBA8UI,
        DXGI_FORMAT_R16G16_FLOAT => GL_RGB16F,
        DXGI_FORMAT_R16G16_UNORM => GL_RG16,
        DXGI_FORMAT_R16G16_UINT => GL_RG16UI,
        DXGI_FORMAT_R16G16_SNORM => GL_RG16_SNORM,
        DXGI_FORMAT_R16G16_SINT => GL_RG16I,
        DXGI_FORMAT_D32_FLOAT => GL_DEPTH_COMPONENT32F,
        DXGI_FORMAT_R32_FLOAT => GL_R32F,
        DXGI_FORMAT_R32_UINT => GL_R32UI,
        DXGI_FORMAT_R32_SINT => GL_R32I,
        DXGI_FORMAT_D24_UNORM_S8_UINT => GL_DEPTH24_STENCIL8,
        DXGI_FORMAT_R8G8_UNORM => GL_RG8,
        DXGI_FORMAT_R8G8_UINT => GL_RG8UI,
        DXGI_FORMAT_R8G8_SNORM => GL_RG8_SNORM,
        DXGI_FORMAT_R8G8_SINT => GL_RG8I,
        DXGI_FORMAT_R16_FLOAT => GL_R16F,
        DXGI_FORMAT_D16_UNORM => GL_DEPTH_COMPONENT16,
        DXGI_FORMAT_R16_UNORM => GL_R16,
        DXGI_FORMAT_R16_UINT => GL_R16UI,
        DXGI_FORMAT_R16_SNORM => GL_R8_SNORM,
        DXGI_FORMAT_R16_SINT => GL_R16I,
        DXGI_FORMAT_R8_UNORM => GL_R8,
        DXGI_FORMAT_R8_UINT => GL_R8UI,
        DXGI_FORMAT_R8_SNORM => GL_R8_SNORM,
        DXGI_FORMAT_R8_SINT => GL_R8I,
        DXGI_FORMAT_A8_UNORM => GL_ALPHA8,
        DXGI_FORMAT_R9G9B9E5_SHAREDEXP => GL_RGB9_E5,
        DXGI_FORMAT_BC2_UNORM => GL_COMPRESSED_RGBA_S3TC_DXT3_EXT,
        DXGI_FORMAT_BC2_UNORM_SRGB => GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT,
        DXGI_FORMAT_BC3_UNORM => GL_COMPRESSED_RGBA_S3TC_DXT5_EXT,
        DXGI_FORMAT_BC3_UNORM_SRGB => GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT,
        DXGI_FORMAT_BC4_UNORM => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_BC4_SNORM => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_BC5_UNORM => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_BC5_SNORM => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_B5G6R5_UNORM => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_B5G5R5A1_UNORM => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_B8G8R8A8_UNORM => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_B8G8R8A8_UNORM_SRGB => panic!("Not implemented for KTX1, try using --ktx2 flag"),
        DXGI_FORMAT_BC6H_UF16 => GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT,
        DXGI_FORMAT_BC6H_SF16 => GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT,
        DXGI_FORMAT_BC7_UNORM => GL_COMPRESSED_RGBA_BPTC_UNORM,
        DXGI_FORMAT_BC7_UNORM_SRGB => GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM,

        DXGI_FORMAT_AYUV => panic!("Cannot translate AYUV"),
        DXGI_FORMAT_Y410 => panic!("Cannot translate Y410"),
        DXGI_FORMAT_Y416 => panic!("Cannot translate Y416"),
        DXGI_FORMAT_NV12 => panic!("Cannot translate NV12"),
        DXGI_FORMAT_P010 => panic!("Cannot translate P010"),
        DXGI_FORMAT_P016 => panic!("Cannot translate P016"),
        DXGI_FORMAT_420_OPAQUE => panic!("Cannot translate 420_OPAQUE"),
        DXGI_FORMAT_YUY2 => panic!("Cannot translate YUY2"),
        DXGI_FORMAT_Y210 => panic!("Cannot translate Y210"),
        DXGI_FORMAT_Y216 => panic!("Cannot translate Y216"),
        DXGI_FORMAT_NV11 => panic!("Cannot translate NV11"),
        DXGI_FORMAT_AI44 => panic!("Cannot translate AI44"),
        DXGI_FORMAT_IA44 => panic!("Cannot translate IA44"),
        DXGI_FORMAT_P8 => panic!("Cannot translate P8"),
        DXGI_FORMAT_A8P8 => panic!("Cannot translate A8P8"),
        DXGI_FORMAT_B4G4R4A4_UNORM => panic!("Cannot translate B4G4R4A4_UNORM"),
        DXGI_FORMAT_P208 => panic!("Cannot translate P208"),
        DXGI_FORMAT_V208 => panic!("Cannot translate V208"),
        DXGI_FORMAT_V408 => panic!("Cannot translate V408"),

        DXGI_FORMAT_B8G8R8X8_UNORM_SRGB => panic!("Cannot translate B8G8R8X8_UNORM_SRGB"),
        DXGI_FORMAT_B8G8R8X8_UNORM => panic!("Cannot translate B8G8R8X8_UNORM"),

        DXGI_FORMAT_BC1_UNORM => unimplemented!("BC1 requires context about alpha channel, not implemented yet"),
        DXGI_FORMAT_BC1_UNORM_SRGB => unimplemented!("BC1 requires context about alpha channel, not implemented yet"),

        DXGI_FORMAT_R8G8_B8G8_UNORM => panic!("Cannot translate R8G8_B8G8_UNORM"),
        DXGI_FORMAT_G8R8_G8B8_UNORM => panic!("Cannot translate G8R8_G8B8_UNORM"),

        DXGI_FORMAT_R1_UNORM => panic!("Cannot translate R1_UNORM format"),

        DXGI_FORMAT_R32G32B32A32_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R32G32B32_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R16G16B16A16_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R32G32_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R32G8X24_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_X32_TYPELESS_G8X24_UINT => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R10G10B10A2_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R8G8B8A8_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R16G16_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R32_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R24G8_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R24_UNORM_X8_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_X24_TYPELESS_G8_UINT => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R8G8_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R16_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_R8_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_BC1_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_BC2_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_BC3_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_BC4_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_BC5_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_B8G8R8A8_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_B8G8R8X8_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_BC6H_TYPELESS => panic!("Cannot translate typeless format"),
        DXGI_FORMAT_BC7_TYPELESS => panic!("Cannot translate typeless format"),

        _ => panic!("Unknown dxgi format: {}", dxgi_format),
    }
}
